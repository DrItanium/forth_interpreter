#define S(name, op) Y(name, op, Integer)
#define U(name, op) Y(name, op, Address)
#define B(name, op) Y(name, op, bool)
#define SU(name, op) \
    S(name, op) \
    U(name, op)
#define XSU(name, op) \
    X(name, op) \
    SU(name, op)
#define SUB(name, op) \
    SU(name, op) \
    B(name, op)
#define XSUB(name, op) \
    X(name, op) \
    SUB(name, op)
XSU(add, +)
XSU(sub, -)
XSU(mul, *)
XSU(div, /)
XSU(mod, %)
XSU(shiftLeft, <<)
XSU(shiftRight, >>)
XSUB(equals, ==)
XSUB(notEquals, !=)
XSUB(logicalAnd, &&)
XSUB(logicalOr, ||)
XSU(logicalXor, ^)
XSU(greaterThan, >)
XSU(lessThan, <)
XSU(greaterThanOrEqualTo, >=)
XSU(lessThanOrEqualTo, <=)
XSU(bitwiseAnd, &)
XSU(bitwiseOr, |)
#undef XSUB
#undef XSU
#undef SU
#undef SUB
#undef S
#undef U
#undef B
