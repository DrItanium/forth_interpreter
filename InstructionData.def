	X(Nop, One, NoArguments, Count)
    X(Add, Three, ThreeRegister, Number)
    X(Subtract, Three, ThreeRegister, Number)
    X(Multiply, Three, ThreeRegister, Number)
    X(Divide, Three, ThreeRegister, Number)
    X(Modulo, Three, ThreeRegister, Number)
    X(Not, Two, TwoRegister, Number)
    X(Minus, Two, TwoRegister, Number)
    X(And, Three, ThreeRegister, Number)
    X(Or, Three, ThreeRegister, Number)
    X(GreaterThan, Three, ThreeRegister, Number)
    X(LessThan, Three, ThreeRegister, Number)
    X(Xor, Three, ThreeRegister, Number)
    X(ShiftRight, Three, ThreeRegister, Number)
    X(ShiftLeft, Three, ThreeRegister, Number)
    X(PopRegister, Two, TwoRegister, Number)
    X(PushRegister, Two, TwoRegister, Number)
    X(Equals, Three, ThreeRegister, Number)
    X(TypeValue, Two, TwoRegister, Number)
    X(Load, Two, TwoRegister, Count)
    X(Store, Two, TwoRegister, Count)
    X(Pow, Three, ThreeRegister, Number)
    X(SetImmediate16_Lowest, Four, OneRegisterWithImm16, Count)
    X(SetImmediate16_Lower, Four, OneRegisterWithImm16, Count)
    X(SetImmediate16_Higher, Four, OneRegisterWithImm16, Count)
    X(SetImmediate16_Highest, Four, OneRegisterWithImm16, Count)
    X(Move, Two, TwoRegister, Count)
    X(Swap, Two, TwoRegister, Count)
	X(UnsignedAdd, Three, ThreeRegister, MemoryAddress)
    X(UnsignedSubtract, Three, ThreeRegister, MemoryAddress)
    X(UnsignedMultiply, Three, ThreeRegister, MemoryAddress)
    X(UnsignedDivide, Three, ThreeRegister, MemoryAddress)
    X(UnsignedModulo, Three, ThreeRegister, MemoryAddress)
    X(UnsignedNot, Two, TwoRegister, MemoryAddress)
    X(UnsignedMinus, Two, TwoRegister, MemoryAddress)
    X(UnsignedAnd, Three, ThreeRegister, MemoryAddress)
    X(UnsignedOr, Three, ThreeRegister, MemoryAddress)
    X(UnsignedGreaterThan, Three, ThreeRegister, MemoryAddress)
    X(UnsignedLessThan, Three, ThreeRegister, MemoryAddress)
    X(UnsignedXor, Three, ThreeRegister, MemoryAddress)
    X(UnsignedShiftRight, Three, ThreeRegister, MemoryAddress)
    X(UnsignedShiftLeft, Three, ThreeRegister, MemoryAddress)
    X(UnsignedEquals, Three, ThreeRegister, MemoryAddress)
    X(UnsignedTypeValue, Two, TwoRegister, MemoryAddress)
    X(UnsignedPow, Three, ThreeRegister, MemoryAddress)
	X(FloatingPointAdd, Three, ThreeRegister, FloatingPoint)
	X(FloatingPointSubtract, Three, ThreeRegister, FloatingPoint)
	X(FloatingPointMultiply, Three, ThreeRegister, FloatingPoint)
	X(FloatingPointDivide, Three, ThreeRegister, FloatingPoint)
	X(FloatingPointMinus, Two, TwoRegister, FloatingPoint)
	X(FloatingPointGreaterThan, Three, ThreeRegister, FloatingPoint)
	X(FloatingPointLessThan, Three, ThreeRegister, FloatingPoint)
	X(FloatingPointEquals, Three, ThreeRegister, FloatingPoint)
	X(FloatingPointPow, Three, ThreeRegister, FloatingPoint)
	X(FloatingPointTypeValue, Three, ThreeRegister, FloatingPoint)
	X(BooleanNot, Two, TwoRegister, Boolean)
	X(BooleanAnd, Three, ThreeRegister, Boolean)
	X(BooleanOr, Three, ThreeRegister, Boolean)
	X(BooleanXor, Three, ThreeRegister, Boolean)
	X(BooleanEquals, Three, ThreeRegister, Boolean)
	X(BooleanTypeValue, Two, TwoRegister, Boolean)
    X(AddImmediate, Four, TwoRegisterWithImm16, Number)
    X(SubtractImmediate, Four, TwoRegisterWithImm16, Number)
    X(MultiplyImmediate, Four, TwoRegisterWithImm16, Number)
    X(DivideImmediate, Four, TwoRegisterWithImm16, Number)
    X(ModuloImmediate, Four, TwoRegisterWithImm16, Number)
    X(AndImmediate, Four, TwoRegisterWithImm16, Number)
    X(OrImmediate, Four, TwoRegisterWithImm16, Number)
    X(GreaterThanImmediate, Four, TwoRegisterWithImm16, Number)
    X(LessThanImmediate, Four, TwoRegisterWithImm16, Number)
    X(XorImmediate, Four, TwoRegisterWithImm16, Number)
    X(ShiftRightImmediate, Four, TwoRegisterWithImm16, Number)
    X(ShiftLeftImmediate, Four, TwoRegisterWithImm16, Number)
    X(EqualsImmediate, Four, TwoRegisterWithImm16, Number)
    X(UnsignedAddImmediate, Four, TwoRegisterWithImm16, MemoryAddress)
    X(UnsignedSubtractImmediate, Four, TwoRegisterWithImm16, MemoryAddress)
    X(UnsignedMultiplyImmediate, Four, TwoRegisterWithImm16, MemoryAddress)
    X(UnsignedDivideImmediate, Four, TwoRegisterWithImm16, MemoryAddress)
    X(UnsignedModuloImmediate, Four, TwoRegisterWithImm16, MemoryAddress)
    X(UnsignedAndImmediate, Four, TwoRegisterWithImm16, MemoryAddress)
    X(UnsignedOrImmediate, Four, TwoRegisterWithImm16, MemoryAddress)
    X(UnsignedGreaterThanImmediate, Four, TwoRegisterWithImm16, MemoryAddress)
    X(UnsignedLessThanImmediate, Four, TwoRegisterWithImm16, MemoryAddress)
    X(UnsignedXorImmediate, Four, TwoRegisterWithImm16, MemoryAddress)
    X(UnsignedShiftRightImmediate, Four, TwoRegisterWithImm16, MemoryAddress)
    X(UnsignedShiftLeftImmediate, Four, TwoRegisterWithImm16, MemoryAddress)
    X(UnsignedEqualsImmediate, Four, TwoRegisterWithImm16, MemoryAddress)
	X(Jump, Three, Signed16Imm, Count)
	X(JumpIndirect, Two, TwoRegister, Count)
	X(JumpAbsolute, Four, Imm24, Count)
	X(CallSubroutine, Three, Signed16Imm, Count)
	X(CallSubroutineIndirect, Two, OneRegister, Count)
	X(ReturnSubroutine, One, NoArguments, Count)
	X(ConditionalBranch, Four, OneRegisterWithImm16, Count)
	X(ConditionalBranchIndirect, Two, TwoRegister, Count)
	X(ConditionalCallSubroutine, Four, OneRegisterWithImm16, Count)
	X(ConditionalCallSubroutineIndirect, Two, TwoRegister, Count)
	X(ConditionalReturnSubroutine, Two, OneRegister, Count)
	X(LoadImmediateLower48, Eight, LoadImm48, Count)
    // type field manipulation
    X(DecodeBits, Three, FourRegister, Count)
    X(EncodeBits, Four, FiveRegister, Count)
    //X(LoadHalfAddress, Two, TwoRegister, Count)
    //X(LoadQuarterAddress, Two, TwoRegister, Count)
    //X(LoadByte, Two, TwoRegister, Count)
    //X(StoreByte, Two, TwoRegister, Count)
    //X(StoreHalfAddress, Two, TwoRegister, Count)
    //X(StoreQuarterAddress, Two, TwoRegister, Count)
    X(LeaveExecutionLoop, One, NoArguments, Count) // a hack to support returning to native code
	X(PrintString, Two, TwoRegister, Count)        // read two registers to get start and length in memory
	X(PrintChar, Two, OneRegister, Count)          // print a character stored in a register
	X(TypeDatum, Two, OneRegister, Count)          // print the register with all of its contents
