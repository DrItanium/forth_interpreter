//#define TypedOpcode(a, b, c, d) X(a, b, c, d, INDIRECTION(OpcodeConversion, a))
//#define UntypedOpcode(a, b, c, d) Y(a, b, c, d)
//#define OpcodeCount(a, b, c, d) UntypedOpcode(a, b, c, d) 
//#define OpcodeNumber(a, b, c, d) TypedOpcode(a, b, c, d)
//#define OpcodeFloatingPoint(a, b, c, d) TypedOpcode(a, b, c, d)
//#define OpcodeBoolean(a, b, c, d) TypedOpcode(a, b, c, d)
//#define OpcodeMemoryAddress(a, b, c, d) TypedOpcode(a, b, c, d)
#define DefOpcode(a, b, c, d) 
	UntypedOpcode(Nop, One, NoArguments, Count)
    TypedOpcode(Add, Three, ThreeRegister, Number)
    TypedOpcode(Subtract, Three, ThreeRegister, Number)
    TypedOpcode(Multiply, Three, ThreeRegister, Number)
    TypedOpcode(Divide, Three, ThreeRegister, Number)
    TypedOpcode(Modulo, Three, ThreeRegister, Number)
    TypedOpcode(Not, Two, TwoRegister, Number)
    TypedOpcode(Minus, Two, TwoRegister, Number)
    TypedOpcode(And, Three, ThreeRegister, Number)
    TypedOpcode(Or, Three, ThreeRegister, Number)
    TypedOpcode(GreaterThan, Three, ThreeRegister, Number)
    TypedOpcode(LessThan, Three, ThreeRegister, Number)
    TypedOpcode(Xor, Three, ThreeRegister, Number)
    TypedOpcode(ShiftRight, Three, ThreeRegister, Number)
    TypedOpcode(ShiftLeft, Three, ThreeRegister, Number)
    TypedOpcode(Equals, Three, ThreeRegister, Number)
    TypedOpcode(Pow, Three, ThreeRegister, Number)
	TypedOpcode(AddUnsigned, Three, ThreeRegister, MemoryAddress)
    TypedOpcode(SubtractUnsigned, Three, ThreeRegister, MemoryAddress)
    TypedOpcode(MultiplyUnsigned, Three, ThreeRegister, MemoryAddress)
    TypedOpcode(DivideUnsigned, Three, ThreeRegister, MemoryAddress)
    TypedOpcode(ModuloUnsigned, Three, ThreeRegister, MemoryAddress)
    TypedOpcode(NotUnsigned, Two, TwoRegister, MemoryAddress)
    TypedOpcode(MinusUnsigned, Two, TwoRegister, MemoryAddress)
    TypedOpcode(AndUnsigned, Three, ThreeRegister, MemoryAddress)
    TypedOpcode(OrUnsigned, Three, ThreeRegister, MemoryAddress)
    TypedOpcode(GreaterThanUnsigned, Three, ThreeRegister, MemoryAddress)
    TypedOpcode(LessThanUnsigned, Three, ThreeRegister, MemoryAddress)
    TypedOpcode(XorUnsigned, Three, ThreeRegister, MemoryAddress)
    TypedOpcode(ShiftRightUnsigned, Three, ThreeRegister, MemoryAddress)
    TypedOpcode(ShiftLeftUnsigned, Three, ThreeRegister, MemoryAddress)
    TypedOpcode(EqualsUnsigned, Three, ThreeRegister, MemoryAddress)
    TypedOpcode(PowUnsigned, Three, ThreeRegister, MemoryAddress)
	TypedOpcode(FloatingPointAdd, Three, ThreeRegister, FloatingPoint)
	TypedOpcode(FloatingPointSubtract, Three, ThreeRegister, FloatingPoint)
	TypedOpcode(FloatingPointMultiply, Three, ThreeRegister, FloatingPoint)
	TypedOpcode(FloatingPointDivide, Three, ThreeRegister, FloatingPoint)
	TypedOpcode(FloatingPointMinus, Two, TwoRegister, FloatingPoint)
	TypedOpcode(FloatingPointGreaterThan, Three, ThreeRegister, FloatingPoint)
	TypedOpcode(FloatingPointLessThan, Three, ThreeRegister, FloatingPoint)
	TypedOpcode(FloatingPointEquals, Three, ThreeRegister, FloatingPoint)
	TypedOpcode(FloatingPointPow, Three, ThreeRegister, FloatingPoint)
	TypedOpcode(NotBoolean, Two, TwoRegister, Boolean)
	TypedOpcode(AndBoolean, Three, ThreeRegister, Boolean)
	TypedOpcode(OrBoolean, Three, ThreeRegister, Boolean)
	TypedOpcode(XorBoolean, Three, ThreeRegister, Boolean)
	TypedOpcode(EqualsBoolean, Three, ThreeRegister, Boolean)
    TypedOpcode(AddImmediate, Four, TwoRegisterWithImm16, Number)
    TypedOpcode(SubtractImmediate, Four, TwoRegisterWithImm16, Number)
    TypedOpcode(MultiplyImmediate, Four, TwoRegisterWithImm16, Number)
    TypedOpcode(DivideImmediate, Four, TwoRegisterWithImm16, Number)
    TypedOpcode(ModuloImmediate, Four, TwoRegisterWithImm16, Number)
    TypedOpcode(AndImmediate, Four, TwoRegisterWithImm16, Number)
    TypedOpcode(OrImmediate, Four, TwoRegisterWithImm16, Number)
    TypedOpcode(GreaterThanImmediate, Four, TwoRegisterWithImm16, Number)
    TypedOpcode(LessThanImmediate, Four, TwoRegisterWithImm16, Number)
    TypedOpcode(XorImmediate, Four, TwoRegisterWithImm16, Number)
    TypedOpcode(ShiftRightImmediate, Four, TwoRegisterWithImm16, Number)
    TypedOpcode(ShiftLeftImmediate, Four, TwoRegisterWithImm16, Number)
    TypedOpcode(EqualsImmediate, Four, TwoRegisterWithImm16, Number)
    TypedOpcode(UnsignedAddImmediate, Four, TwoRegisterWithImm16, MemoryAddress)
    TypedOpcode(UnsignedSubtractImmediate, Four, TwoRegisterWithImm16, MemoryAddress)
    TypedOpcode(UnsignedMultiplyImmediate, Four, TwoRegisterWithImm16, MemoryAddress)
    TypedOpcode(UnsignedDivideImmediate, Four, TwoRegisterWithImm16, MemoryAddress)
    TypedOpcode(UnsignedModuloImmediate, Four, TwoRegisterWithImm16, MemoryAddress)
    TypedOpcode(UnsignedAndImmediate, Four, TwoRegisterWithImm16, MemoryAddress)
    TypedOpcode(UnsignedOrImmediate, Four, TwoRegisterWithImm16, MemoryAddress)
    TypedOpcode(UnsignedGreaterThanImmediate, Four, TwoRegisterWithImm16, MemoryAddress)
    TypedOpcode(UnsignedLessThanImmediate, Four, TwoRegisterWithImm16, MemoryAddress)
    TypedOpcode(UnsignedXorImmediate, Four, TwoRegisterWithImm16, MemoryAddress)
    TypedOpcode(UnsignedShiftRightImmediate, Four, TwoRegisterWithImm16, MemoryAddress)
    TypedOpcode(UnsignedShiftLeftImmediate, Four, TwoRegisterWithImm16, MemoryAddress)
    TypedOpcode(UnsignedEqualsImmediate, Four, TwoRegisterWithImm16, MemoryAddress)
	DefOpcode(Jump, Three, SignedImm16, Count)
	DefOpcode(JumpIndirect, Two, TwoRegister, Count)
	DefOpcode(JumpAbsolute, Four, Imm24, Count)
	DefOpcode(CallSubroutine, Three, SignedImm16, Count)
	DefOpcode(CallSubroutineIndirect, Two, OneRegister, Count)
	DefOpcode(ReturnSubroutine, One, NoArguments, Count)
	DefOpcode(ConditionalBranch, Four, OneRegisterWithImm16, Count)
	DefOpcode(ConditionalBranchIndirect, Two, TwoRegister, Count)
	DefOpcode(ConditionalCallSubroutine, Four, OneRegisterWithImm16, Count)
	DefOpcode(ConditionalCallSubroutineIndirect, Two, TwoRegister, Count)
	DefOpcode(ConditionalReturnSubroutine, Two, OneRegister, Count)
    // type field manipulation
    DefOpcode(DecodeBits, Three, FourRegister, Count)
    DefOpcode(EncodeBits, Four, FiveRegister, Count)
    //DefOpcode(LoadHalfAddress, Two, TwoRegister, Count)
    //DefOpcode(LoadQuarterAddress, Two, TwoRegister, Count)
    //DefOpcode(LoadByte, Two, TwoRegister, Count)
    //DefOpcode(StoreByte, Two, TwoRegister, Count)
    //DefOpcode(StoreHalfAddress, Two, TwoRegister, Count)
    //DefOpcode(StoreQuarterAddress, Two, TwoRegister, Count)
    DefOpcode(TypeValue, Two, TwoRegister, Number)
    DefOpcode(Load, Two, TwoRegister, Count)
    DefOpcode(Store, Two, TwoRegister, Count)
    DefOpcode(LoadImmediate16, Four, LoadImm16, Count)
    DefOpcode(LoadImmediate32, Six, LoadImm32, Count)
	DefOpcode(LoadImmediate48, Eight, LoadImm48, Count)
    DefOpcode(LoadImmediate64, Ten, LoadImm64, Count)
    DefOpcode(Move, Two, TwoRegister, Count)
    DefOpcode(Swap, Two, TwoRegister, Count)
    DefOpcode(PopRegister, Two, TwoRegister, Count)
    DefOpcode(PushRegister, Two, TwoRegister, Count)
    DefOpcode(UnsignedTypeValue, Two, TwoRegister, MemoryAddress)
	DefOpcode(FloatingPointTypeValue, Three, ThreeRegister, FloatingPoint)
	DefOpcode(BooleanTypeValue, Two, TwoRegister, Boolean)
    DefOpcode(LeaveExecutionLoop, One, NoArguments, Count) // a hack to support returning to native code
	DefOpcode(PrintString, Two, TwoRegister, Count)        // read two registers to get start and length in memory
	DefOpcode(PrintChar, Two, OneRegister, Count)          // print a character stored in a register
	DefOpcode(TypeDatum, Two, OneRegister, Count)          // print the register with all of its contents
#undef DefOpcode
